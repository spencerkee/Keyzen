2017:
	Documentation/Writeup/clean up project
	Add support for multiple keyboards using "mod" key
	Somewhat interactive website
	Fitness function for fleksy-like keyboard
	Fitness function that could prioritize ease of learning?

-DEAP
need to use deap to maintain population diversity
python reload image
ipython notebook


home row most optimial?
fitness:

-ergonomics/disability
FLEKSY and KALQ
are there even ergonomics for mobile keyboards?
-ease of learning
least number of character switches
is this the only thing?
-efficiency
test varying sizes (keys have random sizes, must be placed randomly not overlapping) does a larger key increase ease of learning or speed of typing? Do larger keys necessitate other keys being way smaller? How to factor in the multiple keyboard panels
are there dominant thumbs?

-mobile testing
figure out if everyone presses space with 1 thumb
find most often used symbols (how to get corpus?)
get from online?
get from myself?
if a word is mostly on the right i use only right
some letters are switchable
thumbs are wide, try is typed with 1 finger.
how many 3 letter combinations are there that i can test?
26*26*26 or blocks of letters
multiples of space or backspace?
track how much each thumb is used, both in program and in real life
is hurdling as much of a problem? maybe it is better
is this true for mobile (the chances of stuttering are increased and a rhythm can be broken, thus decreasing speed and increasing errors and fatigue.)
don't need to preserve shortcuts. on keyboards you can set it so that holding control will switch it to qwerty to preserve shortcuts


adjacent letters are always typed together?

find a way to look for words with things like (2 in one direction, then double back)?
beryl is interesting word

faster to alternate or all with one finger? more errors one way or the other?


-mobile program
what should yy be?
2 pointers, right always presses space, left controls shift. right is backspace. backspace is encoded as $?
iterate along input string
identify if letter is on the right or left. have 2 variables. track last used.
if letter is in last used, add calculate distance from last used to current letter and add to distance and iterate letters.
fitness function can have coefficents for each of the 3 values.

is it possible to track transitions at the beginning like the original? is it better to store hard distances? probably not
should there be another dictionary for capital letters or just calculated?
should coordinates be strings?
you can move 2 thumbs at once
too much focus on perfect typing, where is backspace

#if the input string is preprocessed with shift it won't have to check uppper
#find out how the time changes for longer input strings/more capitals
#once the is a coordList find areas where things are on 1 finger and calculate them together without looking for what hand they are on
#make mobileCoordTest return the keyboard?
#remove extra totalDistance = 0 lines?
#are there even letters that are pressed by both?
#should I replace every function call with in program alternatives?
preprocess coordList to just calculate the distances of all 1 finger sections together? not sure if this changes the total number of calculations
#numCoord global or not?
#probably would take around 5 hours do to a 5 bounded bfs, colemak changes 27, dvorak 33
#pickling results
identify rounding error, possibly don't need so many significant figures
#kalq test, and kalq style test
#add a timeit funciton at the beginning of the for loop and also find out how long the beginning of the program takes
#for resultsTraverser have the top 2 results with percents for letter placement

accurately rename functions and variables more
#heatmap
test small keyboard?
work on duplicatesExist

#work on a better visualizer using knowledge from graphics class
#figure out what data type the visualizer should accept, or which different data types
have the visualizer display a correctly sized spacebar

~IMPORTANT~
#work out how mating should function
===instead of recalculating input string every time just check changes
randomGradient probably does a ton of shuffleing, check if that is necessary
#create a model where certain keys can't be changed
#run this continuously on spare computer
add support for the mod key on iphone keyboards
calculate time spent on what rows, letter frequencies, bigraph frequencies
calculate time spent in what zones instead of rows on normal keyboards
#correct spreadkeys by having it prioritize important keys

===Determine cost of pressing the same key without moving your finger by watching video of key transitions and pressing the same buttons
if modkeys are added, there must be one in every third of the keyboard



MOVING FORWARD:
need better idea of shape of fitness landscape
need a better idea of when it convolves and how certain things affect it
experiment with modkeys
experiment with sizes of keys
increase layout size
repeat key costs, and is alternating better?
flesh out heatmapping
physical implementation 
get frequency of usage of symbols, etc, possibly from keylogger
try to optimize for 1 finger and 2 finger at the same time
support for moving 2 thumbs at once